lane :release_to_github do |options|
  ensure_git_branch(branch: "main")
  
  api_token = ENV["GITHUB_TOKEN"]
  UI.user_error!("Invalid GitHub API token.") unless !api_token.to_s.empty?
  
  release_version = options[:version]
  UI.user_error!("Missing version to realease.") unless !release_version.to_s.empty?

  github_release = set_github_release(
    repository_name: "pixlwave/Release-Notes-Test",
    api_token: api_token,
    name: release_version,
    tag_name: release_version,
    is_generate_release_notes: true,
  )
  
  release_date = Date.today.strftime("%Y-%m-%d")
  generated_notes = github_release["body"].gsub(/<!-- .*? -->/, '')
  UI.user_error!("The generated release notes are missing!") unless !generated_notes.to_s.empty?
  
  # Prepend the new release notes to the CHANGES.md file
  changes_file = "../CHANGES.md"
  File.open(changes_file, "r+") do |file|
    content = file.read
    file.rewind
    file.write("## Changes in #{release_version} (#{release_date})#{generated_notes}\n\n#{content}")
  end
  
  # simulate prepare next version step.
  git_commit(path: "./CHANGES.md", message: "Prepare next version")
  push_to_git_remote
end